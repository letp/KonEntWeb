
/** Gülsen */

import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

import javax.annotation.Resource;
import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import javax.sql.DataSource;

/**
 * Servlet implementation class VerkaufenServlet
 */
@WebServlet("/VerkaufenServlet")
public class VerkaufenServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
	
    Integer i = -1;
    Integer katZahl = 0;
    ArrayList<Buch> ergebnisse = new ArrayList<Buch>();
    ArrayList<String> kategorien = new ArrayList<String>();
    
	@Resource(lookup="jdbc/MyTHIPool")
    DataSource ds;
	
    /**
     * @see HttpServlet#HttpServlet()
     */
    public VerkaufenServlet() {
        super();
        // TODO Auto-generated constructor stub
    }
    

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		request.setCharacterEncoding("UTF-8");
		HttpSession session = request.getSession();
	    Buch buch = new Buch();
		
		buch.setTitel(request.getParameter("titel"));
		buch.setIsbn(request.getParameter("isbn"));
		buch.setZustand(request.getParameter("zustand"));
		buch.setBeschreibung(request.getParameter("beschreibung"));
		buch.setPreis(request.getParameter("preis"));
		buch.setKategorie(request.getParameter("kategorie"));
		buch.setAutor(request.getParameter("autor"));
		
		ResultSet rs = null;
		
		 /**
         * Überprüfen ob das <buch schon vorhanden ist, falls ja persistExemplar(), falls nicht persistBuch() ausführen 
         */
        try(Connection con = ds.getConnection();
                
                PreparedStatement p = con.prepareStatement("SELECT * FROM bucher WHERE isbn = ?")){
                
                p.setString(1, request.getParameter("isbn"));
                
                rs = p.executeQuery();
                if(rs.next()){
                    persistExemplar(buch);
                    request.setAttribute("buchwahl", buch);
                    session.setAttribute("buchwahl", buch);
                    exempl(request.getParameter("isbn"));
                    session.setAttribute("exemplare", ergebnisse);
                    session.setAttribute("exemplarZahl", i);
                    session.setAttribute("kategorien", null);
                    updateKat();
                    session.setAttribute("kategorien", kategorien);
                    session.setAttribute("kategorieZahl", katZahl);
                    final RequestDispatcher dispatcher = request.getRequestDispatcher("home/html/Buch.jsp");
                    dispatcher.forward(request, response);
                }else{
                    persistBuch(buch);
                    request.setAttribute("buchwahl", buch);
                    session.setAttribute("buchwahl", buch);
                    exempl(request.getParameter("isbn"));
                    session.setAttribute("exemplare", ergebnisse);
                    session.setAttribute("exemplarZahl", i);
                    session.setAttribute("kategorien", null);
                    updateKat();
                    session.setAttribute("kategorien", kategorien);
                    session.setAttribute("kategorieZahl", katZahl);
                    final RequestDispatcher dispatcher = request.getRequestDispatcher("home/html/Buch.jsp");
                    dispatcher.forward(request, response);
                }
                
                
         } catch (Exception ex) {
              // TODO Auto-generated catch block
              throw new ServletException(ex.getMessage());
         }
	
		}
	
	
	private void persistExemplar(Buch form) throws ServletException {
	    String table = form.getIsbn();
	    String[] generatedKeys = new String[] {"id"};
	    
	    /**
         * isbn wird nur in exemplarliste geschrieben, 
         */
	    try (Connection con = ds.getConnection();
                PreparedStatement p3 = con.prepareStatement("INSERT INTO " + table +" (titel, beschreibung, zustand, preis, autor) VALUES (?,?,?,?,?)",generatedKeys)){
                
                p3.setString(1, form.getTitel());
                p3.setString(2, form.getBeschreibung());
                p3.setString(3, form.getZustand());
                p3.setString(4, form.getPreis());
                p3.setString(5, form.getAutor());
                p3.executeUpdate();
                ResultSet rs = p3.getGeneratedKeys();
                while (rs.next()) {
                    form.setId(rs.getLong(1));
                }
            } catch (Exception ex){
                throw new ServletException(ex.getMessage());
            }       
	    
	}
	
	
	private void persistBuch(Buch form) throws ServletException {
	    String[] generatedKeys = new String[] {"id"};
	    String table = form.getIsbn(); 
	    /**
	     * isbn in bucher liste schreibe, 
	     */
	    try (Connection con = ds.getConnection();
	            PreparedStatement p1 = con.prepareStatement("INSERT INTO bucher (isbn, titel, kategorie, gekauft) VALUES (?,?,?,?)")){
	            
	            p1.setString(1, form.getIsbn());
	            p1.setString(2, form.getTitel());
	            p1.setString(3, form.getKategorie());
	            p1.setInt(4, 0);
	            p1.executeUpdate();
	            
	        } catch (Exception ex){
	            throw new ServletException(ex.getMessage());
	        }
	    
	    
	    /**
	     * neue Tabelle für die Exemplare dieses Buchs wird erstellt
	     */
	    try (Connection con = ds.getConnection();
	           
	        PreparedStatement p2 = con.prepareStatement("CREATE TABLE " + table +" (id INTEGER AUTO_INCREMENT PRIMARY KEY, titel VARCHAR(50), beschreibung VARCHAR(200), zustand VARCHAR(50), preis VARCHAR(50), kategorie VARCHAR(50), autor VARCHAR(50))")){
	        
	        p2.executeUpdate();
	        
	    } catch (Exception ex){
	        throw new ServletException(ex.getMessage());
	    }
	    /**
	     * und hier der erste Eintrag in diese Tabelle 
	     */
        try (Connection con = ds.getConnection();
                PreparedStatement p3 = con.prepareStatement("INSERT INTO " + table +" (titel, beschreibung, zustand, preis, kategorie, autor) VALUES (?,?,?,?,?,?)",generatedKeys)){
                
                p3.setString(1, form.getTitel());
                p3.setString(2, form.getBeschreibung());
                p3.setString(3, form.getZustand());
                p3.setString(4, form.getPreis());
                p3.setString(5, form.getKategorie());
                p3.setString(6, form.getAutor());
                p3.executeUpdate();
                ResultSet rs = p3.getGeneratedKeys();
                while (rs.next()) {
                    form.setId(rs.getLong(1));
                }
            } catch (Exception ex){
                throw new ServletException(ex.getMessage());
            }	    
	    


	}
    public void exempl(String tabelle) throws ServletException{
        ResultSet rs = null;
        try(Connection con = ds.getConnection();
                PreparedStatement p = con.prepareStatement("SELECT * FROM "+tabelle)){
                rs = p.executeQuery();
                while(rs.next()){
                        Buch buch = new Buch();
                        buch.setTitel(rs.getString("titel"));
                        ergebnisse.add(buch);
                        i=i+1;
                }
         } catch (Exception ex) {
              // TODO Auto-generated catch block
              throw new ServletException(ex.getMessage());
         }
    }
    
    private void updateKat(){
        
        ResultSet rs = null;
        
        try(Connection con = ds.getConnection();
                
                PreparedStatement p = con.prepareStatement("SELECT * FROM bucher")){
                
                rs = p.executeQuery();
                while(rs.next()){
                    if (!kategorien.contains(rs.getString(3))){
                    kategorien.add(rs.getString(3));
                    katZahl=katZahl+1;
                    }
                }

        } catch (SQLException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
	}

}
